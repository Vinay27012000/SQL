
Table Name:	PRODUCT_MASTER																	
Description:	Used to store product information.															
Column Name					Data Type						Size							
PRODUCTNO				  		VARCHAR2						6									
DESCRIPTION						VARCHAR2						15								
PROFITPERCENT	        	NUMBER						4,2							
UNITMEASURE						VARCHAR2						10								
QTYONHAND				  	   	NUMBER						8									
REORDERLVL					  	NUMBER						8,2							
SELLPRICE			  		  	NUMBER						8,2							
COSTPRICE		  		  		NUMBER						8,2							
Data for PRODUCT_MASTER table:																				
																							
PRODUCTNO	DESCRIPTION		PROFIT	  UNIT	  	QTYON	REORDER	 SELL		COST	
							          PERCENT 	MEASURE		 HAND		LVL		 PRICE	PRICE	
P00001		1.44floppies 		5		    	Piece	  	200			50		350		250	
P03453		Monitors 	    	6		    	Piece	  	150			50		500		350	
P06734		Mouse 	      	5		    	Piece	  	100			20		600		450	
P07865		1.22floppies 		5			    Piece	  	100			20		750		500	
P07868		Keyboards 	  	2		    	Piece	  	150			50		850		550	
P07885		CDDrive 		   2.5		    Piece	  	80			30		700		450	
P07965		540 HDD 		    4			    Piece	  	100			40		350		250	
P07975		1.44Drive 		  5			    Piece	  	70			30		300		175	
P08865		1.22Drive 	  	5		    	Piece	  	75			30		450		300	


Create the table and insert records as given above.
CODE: FOR CREATION OF TABLE
 CREATE TABLE PRODUCT_MASTER(
PRODUCTNO VARCHAR2(6),		
DESCRIPTION	VARCHAR2(15),	
PROFITPERCENT NUMBER(4,2),
UNITMEASURE  VARCHAR2(10),
QTYONHAND NUMBER(8),		
REORDERLVL NUMBER(8,2),
SELLPRICE NUMBER (8,2),	
COSTPRICE NUMBER (8,2));
CODE FOR INSERTION
INSERT INTO PRODUCT_MASTER VALUES ('P00001','1.44floppies',5,'Piece',200,50,350,250);
INSERT INTO PRODUCT_MASTER VALUES('P03453','Monitors',6,'Piece',150,50,500,350);
INSERT INTO PRODUCT_MASTER VALUES('P06734','Mouse',5,'Piece',100,20,600,450);
INSERT INTO PRODUCT_MASTER VALUES('P07865','1.22floppies',5,'Piece',100,20,750,500);	
INSERT INTO PRODUCT_MASTER VALUES('P07868','Keyboards',2,'Piece',150,50,850,550);
INSERT INTO PRODUCT_MASTER VALUES('P07885','CDDrive',2.5,'Piece',80,30,700,450	);
INSERT INTO PRODUCT_MASTER VALUES('P07965','540 HDD ',4,'Piece',100,40,350,250	);
INSERT INTO PRODUCT_MASTER VALUES('P07975','1.44Drive',5,'Piece',70,30,300,175);
INSERT INTO PRODUCT_MASTER VALUES('P08865','1.22Drive',5,'Piece',75,30,450,300);


Write the SQL queries for the following:
1.	List the various products available from the product_master table.
CODE: SELECT  * FROM PRODUCT_MASTER; 

2.	Find the products with description as ‘1.44 Drive’ and ‘1.22 Drive’.
CODE: SELECT * FORM PRODUCT_MASTER WHERE DESCRIPTION = ‘1.44 Drive’ OR DESCRIPTION= ‘1.22 Drive’;

3.	Find all the products whose sell price is greater than 5000.
CODE:SELECT * FROM PRODUCT_MASTER WHERE SELLPRICE>5000;

4.	Find the list of all clients who stay in city ‘Bombay’ or city ‘Delhi’ or ‘Madras’.
CODE: SELECT * FROM CLIENT_MASTER WHERE CITY=’Bombay’ OR CITY=’Delhi’ OR CITY=’Madras’;

5.	Find the product whose selling price is greater than 200 and less than or equal to 500
CODE: SELECT * FROM PRODUCT_MASTER WHERE SELLPRICE>200 AND SELLPRICE<500;

6.	List the name, city and state of clients not in the state of ‘Maharashtra’.
CODE: SELECT CITY,STATE FROM CLIENT_MASTER WHERE NOT CITY=’Maharashtra’; 

7.	Change the selling price of ‘1.44 floppy drive’ to Rs.1150.00
CODE: UPDATE PRODUCT_MASTER SET SELLPRICE=1150 WHERE DESCRIPTION=’1.44 floppy drive’;

8.	Delete the record with client C00001 from the client_master table.
CODE : DELETE FROM CLIENT_MASTER WHERE CLIENTNO=’C00001’;

9.	Find the products whose selling price is more than 1500 and also find the new selling price as original selling price*15.
CODE: SELECT PRODCTNO, DESCRIPTION,SELLPRICE*15 AS  “NEW SELLPRICE” FROM PRODUCT_MASTER WHERE SELLPRICE>1500;

10.	Find out the clients who stay in a city whose second letter is a.
CODE: SELECT * FROM CLIENT_MASTER WHERE CITY LIKE ‘_a%’;

11.	Find out the name of all clients having ‘a’ as the second letter in their names.
CODE: SELECT * FROM CLIENT_MASTER WHERE NAME LIKE ‘_a%’;

12.	List the products in sorted order of their description.
CODE: SELECT * FROM PRODUCT_MASTER ORDER BY DESCRIPTION ASC;

13.	Count the total number of product.
CODE: SELECT COUNT (PRODUCTNO) FROM PRODUCT_MASTER;

14.	Calculate the average price of all the products
CODE: SELECT AVG(COSTPRICE) FROM PRODUCT_MASTER;

15.	Calculate the minimum price of products.
CODE: SELECT MIN(COSTPRICE) FROM PRODUCT_MASTER;

16.	Determine the maximum and minimum prices. Rename the tittle as ‘max_price’ and min_price respectively.
CODE: SELECT MAX(COSTPRICE) AS “MAX_PRICE”,MIN(COSTPRICE) AS “MIN_PRICE” FROM PRODUCT_MASTER;

17.	Count the number of products having price greater than or equal to 1500
CODE: SELECT COUNT (PRODUCTNO) FROM PRODUCT_MASTER WHERE SELLPRICE>=1500;

18.	List the products according to ascending order of their selling price.
19.	CODE: SELECT * FROM PRODUCT_MASTER ORDER BY SELLPRICE ASC;

20.	List the products according to descending order of their selling price.
   	CODE: SELECT * FROM PRODUCT_MASTER ORDER BY SELLPRICE DESC;
